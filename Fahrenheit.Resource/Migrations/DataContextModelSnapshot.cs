// <auto-generated />
using System;
using Fahrenheit.Resource;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Fahrenheit.Resource.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Fahrenheit.Resource.Models.Base.Gun", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cost")
                        .HasColumnType("int");

                    b.Property<int>("Damage")
                        .HasColumnType("int");

                    b.Property<int>("FireRate")
                        .HasColumnType("int");

                    b.Property<int>("MagazineSize")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReloadSpeed")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Guns");
                });

            modelBuilder.Entity("Fahrenheit.Resource.Models.Base.Сharacter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cost")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Characters");
                });

            modelBuilder.Entity("Fahrenheit.Resource.Models.User.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Gold")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Fahrenheit.Resource.Models.User.UserCharacter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BaseСharacterId")
                        .HasColumnType("int");

                    b.Property<Guid?>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BaseСharacterId");

                    b.HasIndex("OwnerId");

                    b.ToTable("UsersCharacters");
                });

            modelBuilder.Entity("Fahrenheit.Resource.Models.User.UserGun", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BaseGunId")
                        .HasColumnType("int");

                    b.Property<Guid?>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BaseGunId");

                    b.HasIndex("OwnerId");

                    b.ToTable("UsersGuns");
                });

            modelBuilder.Entity("GunСharacter", b =>
                {
                    b.Property<int>("AviableGunsId")
                        .HasColumnType("int");

                    b.Property<int>("СharactersId")
                        .HasColumnType("int");

                    b.HasKey("AviableGunsId", "СharactersId");

                    b.HasIndex("СharactersId");

                    b.ToTable("GunСharacter");
                });

            modelBuilder.Entity("Fahrenheit.Resource.Models.User.User", b =>
                {
                    b.OwnsOne("Fahrenheit.Resource.Models.User.LevelSystem", "Level", b1 =>
                        {
                            b1.Property<Guid>("UserId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("Experience")
                                .HasColumnType("int");

                            b1.Property<int>("Value")
                                .HasColumnType("int");

                            b1.HasKey("UserId");

                            b1.ToTable("Users");

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.Navigation("Level");
                });

            modelBuilder.Entity("Fahrenheit.Resource.Models.User.UserCharacter", b =>
                {
                    b.HasOne("Fahrenheit.Resource.Models.Base.Сharacter", "BaseСharacter")
                        .WithMany("UserCharacters")
                        .HasForeignKey("BaseСharacterId");

                    b.HasOne("Fahrenheit.Resource.Models.User.User", "Owner")
                        .WithMany("UserCharacters")
                        .HasForeignKey("OwnerId");

                    b.Navigation("BaseСharacter");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("Fahrenheit.Resource.Models.User.UserGun", b =>
                {
                    b.HasOne("Fahrenheit.Resource.Models.Base.Gun", "BaseGun")
                        .WithMany("UserGuns")
                        .HasForeignKey("BaseGunId");

                    b.HasOne("Fahrenheit.Resource.Models.User.User", "Owner")
                        .WithMany("UserGuns")
                        .HasForeignKey("OwnerId");

                    b.OwnsOne("Fahrenheit.Resource.Models.User.LevelSystem", "Level", b1 =>
                        {
                            b1.Property<int>("UserGunId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<int>("Experience")
                                .HasColumnType("int");

                            b1.Property<int>("Value")
                                .HasColumnType("int");

                            b1.HasKey("UserGunId");

                            b1.ToTable("UsersGuns");

                            b1.WithOwner()
                                .HasForeignKey("UserGunId");
                        });

                    b.Navigation("BaseGun");

                    b.Navigation("Level");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("GunСharacter", b =>
                {
                    b.HasOne("Fahrenheit.Resource.Models.Base.Gun", null)
                        .WithMany()
                        .HasForeignKey("AviableGunsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Fahrenheit.Resource.Models.Base.Сharacter", null)
                        .WithMany()
                        .HasForeignKey("СharactersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Fahrenheit.Resource.Models.Base.Gun", b =>
                {
                    b.Navigation("UserGuns");
                });

            modelBuilder.Entity("Fahrenheit.Resource.Models.Base.Сharacter", b =>
                {
                    b.Navigation("UserCharacters");
                });

            modelBuilder.Entity("Fahrenheit.Resource.Models.User.User", b =>
                {
                    b.Navigation("UserCharacters");

                    b.Navigation("UserGuns");
                });
#pragma warning restore 612, 618
        }
    }
}
